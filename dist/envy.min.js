"use strict";function NV(){}NV.onload=function(n){var e=window.onload;window.onload=function(t){e&&e(t),n(t)}.bind(window)},NV.on=function(t,n){var e=window["on"+t];window["on"+t]=function(t){e&&e(t),n(t)}.bind(window)},NV.fetchJson=function(e,r){return new Promise(function(t,n){fetch(e,r).then(function(t){if(t.ok)return t.json();throw t.status+" "+t.statusText}).then(t).catch(n)})},NV.fetchText=function(e,r){return new Promise(function(t,n){fetch(e,r).then(function(t){if(t.ok)return t.text();throw t.status+" "+t.statusText}).then(t).catch(n)})},NV.merge=function(t,n,e){if(null==e&&(e="ours"),"object"!=typeof t)throw new TypeError("Target must be an object");if("object"!=typeof n)throw new TypeError("Source must be an object");if("string"==typeof e)switch(e.toLowerCase()){case"ours":e=function(t,n,e){return t};break;case"theirs":e=function(t,n,e){return n};break;case"combine":e=function(t,n,e){if(Array.isArray(n))return Array.isArray(t)||(t=[t]),t.concat(n);try{return t+n}catch(t){throw"Unresolved merge conflict (key="+e+")"}};break;case"error":e=function(t,n,e){if(t!=n)throw"Unresolved merge conflict (key="+e+")"}}for(var r=[{target:t,source:n}];r.length;){var o=r.pop(),c=o.target,i=o.source;Object.keys(i).forEach(function(t){t in i&&("object"!=typeof i[t]||Array.isArray(i[t])?c[t]=t in c?e(c[t],i[t]):i[t]:("object"!=typeof c[t]&&(c[t]={}),r.push({target:c[t],source:i[t]})))})}return t};
