"use strict";function NV(){}NV.onload=function(t){var e=window.onload;window.onload=function(r){e&&e(r),t(r)}.bind(window)},NV.on=function(r,t){var e=window["on"+r];window["on"+r]=function(r){e&&e(r),t(r)}.bind(window)},NV.fetchJson=function(e,n){return new Promise(function(r,t){fetch(e,n).then(function(r){if(r.ok)return r.json();throw new MediaError(r.status+" "+r.statusText)}).then(r).catch(t)})},NV.fetchText=function(e,n){return new Promise(function(r,t){fetch(e,n).then(function(r){if(r.ok)return r.text();throw new MediaError(r.status+" "+r.statusText)}).then(r).catch(t)})},NV.merge=function(r,t,e){if(null==e&&(e="ours"),"object"!=typeof r)throw new TypeError("Target must be an object");if("object"!=typeof t)throw new TypeError("Source must be an object");if("string"==typeof e)switch(e.toLowerCase()){case"ours":e=function(r,t,e){return r};break;case"theirs":e=function(r,t,e){return t};break;case"combine":e=function(r,t,e){if(Array.isArray(t))return Array.isArray(r)||(r=[r]),r.concat(t),r;try{return r+t}catch(r){throw new TypeError("Unresolved merge conflict (key="+e+")")}};break;case"error":e=function(r,t,e){if(r!=t)throw new TypeError("Unresolved merge conflict (key="+e+")")}}for(var n=[{target:r,source:t}];n.length;){var o=n.pop(),c=o.target,i=o.source;Object.keys(i).forEach(function(r){r in i&&("object"!=typeof i[r]||Array.isArray(i[r])?c[r]=r in c?e(c[r],i[r]):i[r]:("object"!=typeof c[r]&&(c[r]={}),n.push({target:c[r],source:i[r]})))})}return r};
